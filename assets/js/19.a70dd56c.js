(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{204:function(v,_,t){"use strict";t.r(_);var o=t(0),e=Object(o.a)({},function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"cc-node-一-场景树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cc-node-一-场景树","aria-hidden":"true"}},[v._v("#")]),v._v(" cc.Node(一)场景树")]),v._v(" "),t("blockquote",[t("ul",[t("li",[v._v("了解cc.Node的重要属性,和在场景树中的作用;")]),v._v(" "),t("li",[v._v("了解代码组件扩展自cc.Componet,与组件的入口函数;")]),v._v(" "),t("li",[v._v("了解在代码组件里面访问cc.Node的属性;")]),v._v(" "),t("li",[v._v("熟练的在代码里面使用cc.Node场景树相关的方法函数。")])])]),v._v(" "),t("hr"),v._v(" "),t("h2",{attrs:{id:"一-场景树"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#一-场景树","aria-hidden":"true"}},[v._v("#")]),v._v(" 一.场景树")]),v._v(" "),t("ol",[t("li",[v._v("creator是由一个一个的游戏场景组成，通过代码逻辑来控制场景跳转;")]),v._v(" "),t("li",[v._v("creator场景是一个树形结构;")]),v._v(" "),t("li",[v._v("父节点, 孩子节点;")]),v._v(" "),t("li",[v._v("cc.Node就是场景树中的节点对象。")]),v._v(" "),t("li",[v._v("每个节点只要在场景里面，所以任何一个节点都是一个cc.Node。")])]),v._v(" "),t("hr"),v._v(" "),t("h2",{attrs:{id:"二-cc-node属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#二-cc-node属性","aria-hidden":"true"}},[v._v("#")]),v._v(" 二.cc.Node属性")]),v._v(" "),t("ol",[t("li",[t("strong",[v._v("name")]),v._v(": 获取节点的名字;")]),v._v(" "),t("li",[t("strong",[v._v("active")]),v._v(": 设置节点的可见性;")]),v._v(" "),t("li",[t("strong",[v._v("position")]),v._v(": 相对坐标,参照物是父亲节点;")]),v._v(" "),t("li",[t("strong",[v._v("rotation")]),v._v(": 旋转,顺时针为正, 数学逆时针为正(函数中会用到);")]),v._v(" "),t("li",[t("strong",[v._v("scale")]),v._v(":  缩放;")]),v._v(" "),t("li",[t("strong",[v._v("anchor")]),v._v(": 锚点, 左下角(0,0), 右上角(1,1) 可以超过这个范围;")]),v._v(" "),t("li",[t("strong",[v._v("Size")]),v._v(": 大小;")]),v._v(" "),t("li",[t("strong",[v._v("Color")]),v._v(": 环境颜色;")]),v._v(" "),t("li",[t("strong",[v._v("Opacity")]),v._v(": 透明度,")]),v._v(" "),t("li",[t("strong",[v._v("Skew")]),v._v(": 扭曲;")]),v._v(" "),t("li",[t("strong",[v._v("Group")]),v._v(": 分组;")]),v._v(" "),t("li",[t("strong",[v._v("parent")]),v._v(": 父亲节点的cc.Node;")]),v._v(" "),t("li",[t("strong",[v._v("children/childrenCount")]),v._v(": 孩子节点的数组;")]),v._v(" "),t("li",[t("strong",[v._v("tag")]),v._v(": 节点标签。")])]),v._v(" "),t("hr"),v._v(" "),t("h2",{attrs:{id:"三-cc-component"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#三-cc-component","aria-hidden":"true"}},[v._v("#")]),v._v(" 三.cc.Component")]),v._v(" "),t("ol",[t("li",[t("p",[v._v("所有的组件都扩展自"),t("strong",[v._v("cc.Component(类, 构造函数)")]),v._v(";")])]),v._v(" "),t("li",[t("p",[v._v("每个"),t("strong",[v._v("cc.Component")]),v._v("组件实例都有个成员"),t("strong",[v._v("node")]),v._v(",指向它关联节点的"),t("strong",[v._v("cc.Node")]),v._v(";")])]),v._v(" "),t("li",[t("p",[t("strong",[v._v("name")]),v._v(": 每一个"),t("strong",[v._v("cc.Component")]),v._v("组件通过"),t("strong",[v._v("name")]),v._v("属性可以获得节点的名字;")])]),v._v(" "),t("li",[t("p",[v._v("组件实例入口函数:")]),v._v(" "),t("blockquote",[t("ul",[t("li",[t("strong",[v._v("onLoad")]),v._v(": 在组件加载的时候调用;")]),v._v(" "),t("li",[t("strong",[v._v("start")]),v._v(": 组件第一次激活前, 调用在第一次update之前;")]),v._v(" "),t("li",[t("strong",[v._v("update(dt)")]),v._v(": 每次游戏刷新的时候调用;")])])]),v._v(" "),t("blockquote",[t("ul",[t("li",[t("strong",[v._v("lateUpdate(dt)")]),v._v(": 在update之后调用;")]),v._v(" "),t("li",[t("strong",[v._v("enabled")]),v._v(": 组件是否被启动;")]),v._v(" "),t("li",[t("strong",[v._v("onEnable")]),v._v(": 组件被允许的时候调用;")]),v._v(" "),t("li",[t("strong",[v._v("onDisable")]),v._v(": 组件不被允许的时候调用。")])])])])]),v._v(" "),t("hr"),v._v(" "),t("h2",{attrs:{id:"四-代码组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#四-代码组件","aria-hidden":"true"}},[v._v("#")]),v._v(" 四.代码组件")]),v._v(" "),t("ol",[t("li",[v._v("每个代码组件实例都继承自cc.Component(构造函数),所以有一个node数据成员指向cc.Node;")]),v._v(" "),t("li",[v._v("cc.Class({...}) 定义导出了一个新的类的构造函数，它继承自cc.Component;")]),v._v(" "),t("li",[v._v("当为每个节点添加组件的时候,会实例化(new)这个组件类，生成一个组件实例;(js语法new)")]),v._v(" "),t("li",[v._v("当组件加载运行的时候，代码函数里面的this指向这个组件的实例;")]),v._v(" "),t("li",[v._v("代码组件在挂载的时候扩展自cc.Component, 里面有个成员node会指向节点(cc.Node),\n所以在代码组件里面，可以使用this.node来访问这个组件实例说挂载的节点对象;")]),v._v(" "),t("li",[v._v("代码里访问cc.Node总要属性。")])]),v._v(" "),t("hr"),v._v(" "),t("h2",{attrs:{id:"五-cc-node场景树相关方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#五-cc-node场景树相关方法","aria-hidden":"true"}},[v._v("#")]),v._v(" 五.cc.Node场景树相关方法")]),v._v(" "),t("ol",[t("li",[v._v("代码中创建一个节点"),t("strong",[v._v("new cc.Node()")]),v._v(";")]),v._v(" "),t("li",[t("strong",[v._v("addChild")]),v._v(": 加一个子节点;")]),v._v(" "),t("li",[t("strong",[v._v("removeFromParent/removeAllChildren")]),v._v(";")]),v._v(" "),t("li",[t("strong",[v._v("setLocalZOrder")]),v._v(": 绘制顺序, 在下面的会绘制在屏幕的上面;")]),v._v(" "),t("li",[v._v("遍历节点的子节点;")]),v._v(" "),t("li",[t("strong",[v._v("setPosition/getPosition")]),v._v(";")]),v._v(" "),t("li",[t("strong",[v._v("getChildByName/getChildByTag")]),v._v(", "),t("strong",[v._v("getChildByIndex")]),v._v(";")]),v._v(" "),t("li",[t("strong",[v._v("cc.find()")]),v._v(": 方便，不通用, 消耗，全局查找。")])])])},[],!1,null,null,null);_.default=e.exports}}]);